on:
  workflow_dispatch:
  release:
    types:
      - created

permissions:
  contents: write
  pull-requests: write
  id-token: write

name: Release
  ci-data:
    runs-on: ubuntu-latest
    name: Fetch CI data
    outputs:
      platforms: ${{ steps.platforms.outputs.platforms }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby & Rust
        uses: oxidize-rb/actions/setup-ruby-and-rust@v1
        with:
          ruby-version: ${{ env.MINIMUM_RUBY_VERSION }}
          bundler-cache: true
          cargo-cache: true
          rubygems: ${{ env.RUBYGEMS_VERSION }}
      - name: Install dependencies
        run: bundle install
      - name: Fetch Platforms
        id: platforms
        run: |
          platforms="$(bundle exec rake platforms[json])"
          echo "platforms=$platforms" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby & Rust
        uses: oxidize-rb/actions/setup-ruby-and-rust@v1
        with:
          ruby-version: ${{ env.MINIMUM_RUBY_VERSION }}
          bundler-cache: true
          cargo-cache: true
          rubygems: '3.5.9'
      - name: Build plain gem
        run: bundle exec rake build
      - name: Upload plain gem
        uses: actions/upload-artifact@v4
        with:
          name: plain-gem
          path: pkg/*.gem

  build-native:
    runs-on: ubuntu-latest
    name: Build ${{ matrix.platform }}
    needs: ci-data
    strategy:
      matrix:
        platform: ${{ fromJSON(needs.ci-data.outputs.platforms) }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby & Rust
        uses: oxidize-rb/actions/setup-ruby-and-rust@v1
        with:
          ruby-version: ${{ env.MINIMUM_RUBY_VERSION }}
          bundler-cache: true
          cargo-cache: true
          rubygems: ${{ env.RUBYGEMS_VERSION }}
      - name: Build ${{ matrix.platform }} gem
        run: bundle exec rake gem:${{ matrix.platform }}
      - name: Upload ${{ matrix.platform }} gem
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-gem
          path: pkg/*.gem

  merge-artifacts:
    runs-on: ubuntu-latest
    name: Merge Artifacts
    needs: [build, build-native]
    steps:
      - uses: actions/upload-artifact/merge@v4
        with:
          name: all-platform-gems
          pattern: '*-gem'
