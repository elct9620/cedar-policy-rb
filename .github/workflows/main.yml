name: Ruby

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: '30 4 * * *'

env:
  MINIMUM_RUBY_VERSION: '3.0'
  RUBYGEMS_VERSION: '3.5.9'

jobs:
  commitlint:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
      - name: Print versions
        run: |
          git --version
          node --version
          npm --version
          npx commitlint --version
      - name: Install commitlint
        run: |
          npm install conventional-changelog-conventionalcommits
          npm install commitlint@latest

      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: npx commitlint --last --verbose

      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: npx commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose

  test:
    runs-on: ubuntu-latest
    name: Test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby & Rust
        uses: oxidize-rb/actions/setup-ruby-and-rust@v1
        with:
          ruby-version: ${{ env.MINIMUM_RUBY_VERSION }}
          bundler-cache: true
          cargo-cache: true
          rubygems: ${{ env.RUBYGEMS_VERSION }}
      - run: bundle exec rake

  ci-data:
    runs-on: ubuntu-latest
    name: Fetch CI data
    outputs:
      platforms: ${{ steps.platforms.outputs.platforms }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby & Rust
        uses: oxidize-rb/actions/setup-ruby-and-rust@v1
        with:
          ruby-version: ${{ env.MINIMUM_RUBY_VERSION }}
          bundler-cache: true
          cargo-cache: true
          rubygems: ${{ env.RUBYGEMS_VERSION }}
      - name: Install dependencies
        run: bundle install
      - name: Fetch Platforms
        id: platforms
        run: |
          platforms=$(bundle exec rake platforms)
          echo "platforms=$platforms" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby & Rust
        uses: oxidize-rb/actions/setup-ruby-and-rust@v1
        with:
          ruby-version: ${{ env.MINIMUM_RUBY_VERSION }}
          bundler-cache: true
          cargo-cache: true
          rubygems: '3.5.9'
      - name: Build plain gem
        run: bundle exec rake build
      - name: Upload plain gem
        uses: actions/upload-artifact@v4
        with:
          name: plain-gem

  build-native:
    runs-on: ubuntu-latest
    name: Build ${{ matrix.platform }}
    needs: ci-data
    strategy:
      matrix:
        platform: ${{ fromJSON(needs.ci-data.outputs.platforms) }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby & Rust
        uses: oxidize-rb/actions/setup-ruby-and-rust@v1
        with:
          ruby-version: ${{ env.MINIMUM_RUBY_VERSION }}
          bundler-cache: true
          cargo-cache: true
          rubygems: ${{ env.RUBYGEMS_VERSION }}
      - name: Build ${{ matrix.platform }} gem
        run: bundle exec rake gem:${{ matrix.platform }}
      - name: Upload ${{ matrix.platform }} gem
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-gem
          path: pkg/${{ matrix.platform }}-*.gem
